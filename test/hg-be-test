#!/bin/sh
#
# Test reposurgeon branch naming issue with hg repo
#
# This test cannot use the usual hg-to-fi script because it
# needs an hg repo with actual hg branches, not hg bookmarks;
# the hg convert utility converts git branches in a fast-import
# stream to hg bookmarks, so the hg-regress test target only
# tests correct handling of hg bookmarks, not hg branches

BIN=${PWD}/..

build=True
stream=True
cleanup=True

pecho() { printf %s\\n "$*"; }
log() { pecho "$@"; }
error() { log "ERROR: $@" >&2; }
fatal() { error "$@"; exit 1; }
try() { "$@" || fatal "'$@' failed"; }

while getopts nr opt
do
    case $opt in
    n) build=True; stream=False ; cleanup=False ;;
    r) build=False; stream=True  ; cleanup=False ;;
    esac
done
shift $(($OPTIND - 1))

testrepo=${1:-/tmp/test-repo}

# Should we build the repo?
if [ $build = True ]
then
    # Build hg test repo with multiple hg branches
    try rm -fr $testrepo
    try hg init $testrepo || exit 1
    try cd $testrepo >/dev/null
    (
        try echo "Test file 1." > testfile1
        try hg add testfile1 >/dev/null
        try hg commit -m "Commit test file 1." >/dev/null
        try hg branch test >/dev/null
        try echo "Test file 2." > testfile2
        try hg add testfile2 >/dev/null
        try hg commit -m "Commit test file 2." >/dev/null
        try hg update default >/dev/null
        try echo "Test file 3." > testfile3
        try hg add testfile3 >/dev/null
        try hg commit -m "Commit test file 3." >/dev/null
    ) || exit 1
    try cd - >/dev/null
fi

# Should we stream the repo?
if [ $stream = True ]
then
    try ${BIN}/reposurgeon "read $testrepo" "write -"
fi

# Should we clean up the test directory
if [ $cleanup = True ]
then
    try rm -fr $testrepo
fi
