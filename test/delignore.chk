#reposurgeon sourcetype svn
blob
mark :1
data 210
# A simulation of Subversion default ignores, generated by reposurgeon.
*.o
*.lo
*.la
*.al
*.libs
*.so
*.so.[0-9]*
*.a
*.pyc
*.pyo
*.rej
*~
*.#*
.*.swp
.DS_store
# Simulated Subversion default ignores end here

blob
mark :2
data 37
This is a test Subversion repository

commit refs/heads/master
#legacy-id 2
mark :3
committer esr <esr> 1352219253 +0000
data 24
Initial README content.
M 100644 :1 .gitignore
M 100644 :2 README

blob
mark :4
data 254
The pupose of this test repository is to verify that a .gitignore generated
from an ignore property set on a directory won't survive directory deletion.

Generated .gitignore files should be deleted even in subdirs or if the toplevel
directory is empty.

commit refs/heads/master
#legacy-id 3
mark :5
committer esr <esr> 1352220744 +0000
data 31
Explain what we're doing here.
from :3
M 100644 :4 README

commit refs/heads/master
#legacy-id 4
mark :6
committer esr <esr> 1352220855 +0000
data 61
This follows "svn propset svn:ignore *.pyc foo foo/bar baz".
from :5
M 100644 inline baz/.gitignore
data 7
/*.pyc

M 100644 inline foo/.gitignore
data 7
/*.pyc

M 100644 inline foo/bar/.gitignore
data 7
/*.pyc


commit refs/heads/master
#legacy-id 5
mark :7
committer esr <esr> 1352220901 +0000
data 46
This follows "svn del foo" and "svn del baz".
from :6
D baz/.gitignore
D foo/.gitignore
D foo/bar/.gitignore

commit refs/heads/master
#legacy-id 6
mark :8
committer esr <esr> 1352220744 +0000
data 67
Reintroduce foo to then delete it. There should be a M .gitignore.
from :7
M 100644 inline foo/.gitignore
data 7
/*.pyc


commit refs/heads/master
#legacy-id 7
mark :9
committer esr <esr> 1352220901 +0000
data 50
Delete foo again; there should be a D .gitignore.
from :8
D foo/.gitignore

