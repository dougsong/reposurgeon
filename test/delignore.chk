#reposurgeon sourcetype svn
blob
mark :1
data 225
# A simulation of Subversion default ignores, generated by reposurgeon.
/*.o
/*.lo
/*.la
/*.al
/*.libs
/*.so
/*.so.[0-9]*
/*.a
/*.pyc
/*.pyo
/*.rej
/*~
/*.#*
/.*.swp
/.DS_store
# Simulated Subversion default ignores end here

commit refs/heads/master
#legacy-id 1
mark :2
committer esr <esr> 1352219253 +0000
data 18
Directory layout.
M 100644 :1 .gitignore

blob
mark :3
data 37
This is a test Subversion repository

commit refs/heads/master
#legacy-id 2
mark :4
committer esr <esr> 1352219253 +0000
data 24
Initial README content.
from :2
M 100644 :3 README

blob
mark :5
data 254
The pupose of this test repository is to verify that a .gitignore generated
from an ignore property set on a directory won't survive directory deletion.

Generated .gitignore files should be deleted even in subdirs or if the toplevel
directory is empty.

commit refs/heads/master
#legacy-id 3
mark :6
committer esr <esr> 1352220744 +0000
data 31
Explain what we're doing here.
from :4
M 100644 :5 README

blob
mark :7
data 7
/*.pyc

commit refs/heads/master
#legacy-id 4
mark :8
committer esr <esr> 1352220855 +0000
data 61
This follows "svn propset svn:ignore *.pyc foo foo/bar baz".
from :6
M 100644 :7 baz/.gitignore
M 100644 :7 foo/.gitignore
M 100644 :7 foo/bar/.gitignore

commit refs/heads/master
#legacy-id 5
mark :9
committer esr <esr> 1352220901 +0000
data 46
This follows "svn del foo" and "svn del baz".
from :8
D baz/.gitignore
D foo/.gitignore
D foo/bar/.gitignore

commit refs/heads/master
#legacy-id 6
mark :10
committer esr <esr> 1352220744 +0000
data 67
Reintroduce foo to then delete it. There should be a M .gitignore.
from :9
M 100644 :7 foo/.gitignore

commit refs/heads/master
#legacy-id 7
mark :11
committer esr <esr> 1352220901 +0000
data 50
Delete foo again; there should be a D .gitignore.
from :10
D foo/.gitignore

