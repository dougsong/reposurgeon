<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE refentry PUBLIC
   "-//OASIS//DTD DocBook XML V4.1.2//EN"
   "docbook/docbookx.dtd">
<refentry id='repotool.1'>
<refmeta>
<refentrytitle>repotool</refentrytitle>
<manvolnum>1</manvolnum>
<refmiscinfo class='date'>May 06 2015</refmiscinfo>
<refmiscinfo class='productname'>repotool</refmiscinfo>
<refmiscinfo class='source'>repotool</refmiscinfo>
<refmiscinfo class='manual'>Development Tools</refmiscinfo>
</refmeta>
<refnamediv id='name'>
<refname>repotool</refname>
<refpurpose>query or manipulate a CVS, Subversion, git, bzr, hg, or
darcs repository in a uniform way</refpurpose>
</refnamediv>
<refsynopsisdiv id='synopsis'>

<cmdsynopsis>
  <command>repotool</command>
      <arg><replaceable>action</replaceable></arg>
      <arg choice='opt'><replaceable>URL-or-dir</replaceable></arg>
</cmdsynopsis>
</refsynopsisdiv>

<refsect1 id='description'><title>DESCRIPTION</title>

<para>repotool is a script wrapper around repository operations that
differ by version-control system.  It is little use by itself,
existing mainly to generate and simplify a conversion makefile usable
with
<citerefentry><refentrytitle>reposurgeon</refentrytitle><manvolnum>1</manvolnum></citerefentry>.</para>

<para>Not all actions are supported on all systems.  You will get an
error message and a return value of 1 when attempting an unsupported
action.</para>

<para>The "initialize" option takes a project name (and, optionally,
following source and target VCS types) and generates a
Makefile that will sequence various steps of a repository
conversion. It also generates stub lift and options files. This is
meant to be run in an empty work directory, and it is an error to do
'initialize' where any of these files already exist.  Afterwards, you
will need to set some variables in the Makefile; read its header
comment.</para>

<para>The 'export' action, run from within a repository directory,
dumps a copy of a CVS, Subversion, git, bzr, hg, or darcs repository
to a flat history file readable by reposurgeon. The format is usually
a git-fast-import stream, except that Subversion repositories export
as Subversion dump files; the point is to be a lossless
erepresentation, or as close to one as possible.</para>

<para>The 'tags' option, run from within a repository directory,
returns a list of the repository's release tags.</para>

<para>The 'branches' option, run from within a repository directory ,
returns a list of the repository's branch names.</para>

<para>The 'checkout' option checks out a working copy of the
repository. It must be called from within the repository. It takes one
required argument - the checkout directory location.</para>

<para>The checkout option may take a revision, tag, or branch
specifaction, given with the -r, -t, or -b options. If the spec is
omitted, the tip of the main line of the repository will be used; this
is equivalent to specifying branch 'master' (git terminology, which is
translated by reposurgeon to 'trunk' or whatever the underlying VCS
uses).</para>

<para>The 'compare' action takes two repository directories. It may
optionally take a tag-branch-revision spec as for the checkout
option. The selected versions are compared with diff -q -r, with noise
due to SCCS/RCS/CVS keyword expansion ignored.  You can follow the
command verb with one or more -x options followed by basenames of
paths to exclude from comparison. You can get a context-diff report on
file differences with the -u option. File permissions well as content
are checked, any mismatches will be shown after the diff listing.</para>

<para>The 'compare-tags' action takes two repository directories,
extracts a list of tags from the first, then compares the repository
contents at each tag in the list, generating a compare report for
each.  You can follow the command verb with one or more -x options
followed by basenames of paths to exclude from comparison. You can get
a context-diff report on file differences with the -u option.</para>

<para>The 'compare-branches' action takes two repository directories,
extracts a list of branches common to both, then compares the repository
contents at each branch in the list, generating a compare report for
each.  You can follow the command verb with one or more -x options
followed by basenames of paths to exclude from comparison. You can get
a context-diff report on file differences with the -u option.</para>

<para>The 'compare-all' action takes two repository directories, and
runs all 3 above compare actions on them. Even if the same name is a
tag in one repository and a branch in the other, it will compare them
against each other. Not distinguishing them is useful as CVS tags that
are not applied to every file in the repository may get converted to
branches.  The options are the same as 'compare-tags'.</para>

<para>The 'mirror' action makes or updates a local mirror of a
Subversion, CVS, git, or hg repo. It requires a single argument,
either a repository URL or the name of a local mirror directory
created by a previous run. The first form creates a local mirror of
the repository in a directory named after the last segment of the URL,
with the suffix <quote>-mirror</quote> (the local mirror name can be
overridden by an optional second argument). The second form updates
the local mirror, doing an incremental fetch; just give the mirror
directory name.</para>

<para>Subversion URLs are as specified in the public documentation for
Subversion.  CVS URLs must specify a host and repository path,
followed by a '#', followed by a module name.  URLs for git and hg
should be in the form normally used for clone commands</para>
</refsect1>

<refsect1 id='environment'><title>ENVIRONMENT VARIABLES</title>

<para>This program uses the $TMPDIR environment variable, defaulting
to <filename>/tmp</filename> if it is not set.</para>
</refsect1>

<refsect1 id='requirements'><title>REQUIREMENTS</title>

<para>
The export action is a wrapper around either native export facilities or the
following engines:
<citerefentry><refentrytitle>cvs-fast-export</refentrytitle><manvolnum>1</manvolnum></citerefentry>
(for CVS),
<citerefentry><refentrytitle>svnadmin</refentrytitle><manvolnum>1</manvolnum></citerefentry>
(for SVN),
<citerefentry><refentrytitle>hg-fast-export.py</refentrytitle><manvolnum>1</manvolnum></citerefentry>
(for hg).
You must have the appropriate engine in your $PATH
for whatever kind of repository you are streaming.
</para>
  
</refsect1>

<refsect1 id='see_also'><title>SEE ALSO</title>

<para><citerefentry><refentrytitle>reposurgeon</refentrytitle><manvolnum>1</manvolnum></citerefentry>.</para>

</refsect1>

<refsect1 id='author'><title>AUTHOR</title>

<para>Eric S. Raymond <email>esr@thyrsus.com</email>. This tool is
distributed with reposurgeon; see the project page at <ulink
url='http://www.catb.org/~esr/reposurgeon'>http://www.catb.org/~esr/reposurgeon</ulink>.</para>
</refsect1>
</refentry>
